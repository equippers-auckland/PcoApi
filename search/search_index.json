{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>fact</code> User Guide","text":"<code>python-blueprint</code> Project <p>For more information on how this was built and deployed, as well as other Python best practices, see <code>python-blueprint</code>.</p> <p>Info</p> <p>This user guide is purely an illustrative example that shows off several features of  Material for MkDocs and included Markdown extensions1.</p>"},{"location":"#installation","title":"Installation","text":"<p>First, install Poetry:</p> Linux/macOSWindows <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <pre><code>(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -\n</code></pre> <p>Then install the <code>fact</code> package and its dependencies:</p> <pre><code>poetry install\n</code></pre> <p>Activate the virtual environment created automatically by Poetry:</p> <pre><code>poetry shell\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>To use <code>fact</code> within your project, import the <code>factorial</code> function and execute it like:</p> <pre><code>from fact.lib import factorial\n\nassert factorial(3) == 6 # (1)!\n</code></pre> <ol> <li>This assertion will be <code>True</code></li> </ol> <p>Tip</p> <p>Within PyCharm, use Tab to auto-complete suggested imports while typing.</p>"},{"location":"#expected-results","title":"Expected Results","text":"Input Output 1 1 2 2 3 6 4 24 <ol> <li> <p>See <code>python-blueprint</code>'s <code>mkdocs.yml</code> for how to enable these features.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>pcoapi<ul> <li>api</li> <li>checkins</li> <li>groups</li> <li>helpers</li> <li>models<ul> <li>base_models</li> <li>checkins_models</li> <li>groups_models</li> <li>people_models</li> </ul> </li> <li>people</li> <li>pypco_wrapper</li> </ul> </li> </ul>"},{"location":"reference/pcoapi/__init__/","title":"init","text":""},{"location":"reference/pcoapi/__init__/#pcoapi.__version__","title":"<code>__version__ = '1.0.0'</code>  <code>module-attribute</code>","text":""},{"location":"reference/pcoapi/api/","title":"api","text":"<p>This implements all required endpoints for the PCO API</p>"},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi","title":"<code>PcoApi</code>","text":"<p>This class implements all required endpoints for the PCO API</p> Source code in <code>src/pcoapi/api.py</code> <pre><code>class PcoApi:\n\"\"\"\n    This class implements all required endpoints for the PCO API\n    \"\"\"\n\n    def __init__(\n        self,\n        application_id: str | None = None,  # pylint: disable=unsubscriptable-object\n        secret: str | None = None,  # pylint: disable=unsubscriptable-object\n        token: str | None = None,  # pylint: disable=unsubscriptable-object\n    ):\n        self.api = PyPcoWrapper(application_id=application_id, secret=secret, token=token)\n        self.people = TopLevelPeople(self.api)\n        self.checkins = CheckIns(self.api)\n        self.groups = TopLevelGroups(self.api)\n</code></pre>"},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi.api","title":"<code>api = PyPcoWrapper(application_id=application_id, secret=secret, token=token)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi.checkins","title":"<code>checkins = CheckIns(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi.groups","title":"<code>groups = TopLevelGroups(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi.people","title":"<code>people = TopLevelPeople(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/api/#pcoapi.api.PcoApi.__init__","title":"<code>__init__(application_id: str | None = None, secret: str | None = None, token: str | None = None)</code>","text":"Source code in <code>src/pcoapi/api.py</code> <pre><code>def __init__(\n    self,\n    application_id: str | None = None,  # pylint: disable=unsubscriptable-object\n    secret: str | None = None,  # pylint: disable=unsubscriptable-object\n    token: str | None = None,  # pylint: disable=unsubscriptable-object\n):\n    self.api = PyPcoWrapper(application_id=application_id, secret=secret, token=token)\n    self.people = TopLevelPeople(self.api)\n    self.checkins = CheckIns(self.api)\n    self.groups = TopLevelGroups(self.api)\n</code></pre>"},{"location":"reference/pcoapi/checkins/","title":"checkins","text":"<p>This module contains the PcoApi People class.</p>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.CheckIns","title":"<code>CheckIns</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>class CheckIns:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n        self.events = Events(self.api)\n        self.event_times = EventTimes(self.api)\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.CheckIns.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.CheckIns.event_times","title":"<code>event_times = EventTimes(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.CheckIns.events","title":"<code>events = Events(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.CheckIns.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n    self.events = Events(self.api)\n    self.event_times = EventTimes(self.api)\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes","title":"<code>EventTimes</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>class EventTimes:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_most_recent(self) -&gt; list[PcoEventTimesModel]:\n\"\"\"\n        Requests the 25 most recent Event_times from the PCO API\n        \"\"\"\n        response = self.api.get(\"/check-ins/v2/event_times?order=-starts_at\")\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoEventTimesModel)\n        return filled_data_model\n\n    def get_by_id(self, event_time_id: int) -&gt; PcoEventTimesModel:\n        response = self.api.get(f\"/check-ins/v2/event_times/{event_time_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoEventTimesModel)\n        return filled_data_model\n\n    def get_headcounts_by_event_time_id(\n        self, event_time_id: int\n    ) -&gt; list[PcoEventTimesHeadcountModel]:\n        response = self.api.get(f\"/check-ins/v2/event_times/{event_time_id}/headcounts\")\n        filled_data_model = convert_response_data_to_list_of_model(\n            response, PcoEventTimesHeadcountModel\n        )\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes.get_by_id","title":"<code>get_by_id(event_time_id: int) -&gt; PcoEventTimesModel</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_by_id(self, event_time_id: int) -&gt; PcoEventTimesModel:\n    response = self.api.get(f\"/check-ins/v2/event_times/{event_time_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoEventTimesModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes.get_headcounts_by_event_time_id","title":"<code>get_headcounts_by_event_time_id(event_time_id: int) -&gt; list[PcoEventTimesHeadcountModel]</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_headcounts_by_event_time_id(\n    self, event_time_id: int\n) -&gt; list[PcoEventTimesHeadcountModel]:\n    response = self.api.get(f\"/check-ins/v2/event_times/{event_time_id}/headcounts\")\n    filled_data_model = convert_response_data_to_list_of_model(\n        response, PcoEventTimesHeadcountModel\n    )\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.EventTimes.get_most_recent","title":"<code>get_most_recent() -&gt; list[PcoEventTimesModel]</code>","text":"<p>Requests the 25 most recent Event_times from the PCO API</p> Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_most_recent(self) -&gt; list[PcoEventTimesModel]:\n\"\"\"\n    Requests the 25 most recent Event_times from the PCO API\n    \"\"\"\n    response = self.api.get(\"/check-ins/v2/event_times?order=-starts_at\")\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoEventTimesModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events","title":"<code>Events</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>class Events:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_by_id(self, event_id: int) -&gt; PcoEventsModel:\n        response = self.api.get(f\"/check-ins/v2/events/{event_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoEventsModel)\n        return filled_data_model\n\n    def get_attendance_types(self, event_id: int) -&gt; list[PcoAttendanceTypesModel]:\n        response = self.api.get(f\"/check-ins/v2/events/{event_id}/attendance_types\")\n        filled_data_model = convert_response_data_to_list_of_model(\n            response, PcoAttendanceTypesModel\n        )\n        return filled_data_model\n\n    def get_most_recent_event_periods(self, event_id: int) -&gt; list[PcoEventPeriodsModel]:\n        params = {\"order\": \"-starts_at\", \"per_page\": \"25\"}\n        response = self.api.limited_get(f\"/check-ins/v2/events/{event_id}/event_periods\", **params)\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoEventPeriodsModel)\n        return filled_data_model\n\n    def get_event_period_check_ins(\n        self, event_id: int, event_period_id: int, **params: PcoParamsType\n    ) -&gt; list[PcoEventPeriodCheckInsModel]:\n        response = self.api.get(\n            f\"/check-ins/v2/events/{event_id}/event_periods/{event_period_id}/check_ins\", **params\n        )\n        filled_data_model = convert_response_data_to_list_of_model(\n            response, PcoEventPeriodCheckInsModel\n        )\n        return filled_data_model\n\n    def get_event_times_for_period(\n        self, event_id: int, event_period_id: int\n    ) -&gt; list[PcoEventTimesModel]:\n        response = self.api.get(\n            f\"/check-ins/v2/events/{event_id}/event_periods/{event_period_id}/event_times\"\n        )\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoEventTimesModel)\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.get_attendance_types","title":"<code>get_attendance_types(event_id: int) -&gt; list[PcoAttendanceTypesModel]</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_attendance_types(self, event_id: int) -&gt; list[PcoAttendanceTypesModel]:\n    response = self.api.get(f\"/check-ins/v2/events/{event_id}/attendance_types\")\n    filled_data_model = convert_response_data_to_list_of_model(\n        response, PcoAttendanceTypesModel\n    )\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.get_by_id","title":"<code>get_by_id(event_id: int) -&gt; PcoEventsModel</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_by_id(self, event_id: int) -&gt; PcoEventsModel:\n    response = self.api.get(f\"/check-ins/v2/events/{event_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoEventsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.get_event_period_check_ins","title":"<code>get_event_period_check_ins(event_id: int, event_period_id: int, **params: PcoParamsType) -&gt; list[PcoEventPeriodCheckInsModel]</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_event_period_check_ins(\n    self, event_id: int, event_period_id: int, **params: PcoParamsType\n) -&gt; list[PcoEventPeriodCheckInsModel]:\n    response = self.api.get(\n        f\"/check-ins/v2/events/{event_id}/event_periods/{event_period_id}/check_ins\", **params\n    )\n    filled_data_model = convert_response_data_to_list_of_model(\n        response, PcoEventPeriodCheckInsModel\n    )\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.get_event_times_for_period","title":"<code>get_event_times_for_period(event_id: int, event_period_id: int) -&gt; list[PcoEventTimesModel]</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_event_times_for_period(\n    self, event_id: int, event_period_id: int\n) -&gt; list[PcoEventTimesModel]:\n    response = self.api.get(\n        f\"/check-ins/v2/events/{event_id}/event_periods/{event_period_id}/event_times\"\n    )\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoEventTimesModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/checkins/#pcoapi.checkins.Events.get_most_recent_event_periods","title":"<code>get_most_recent_event_periods(event_id: int) -&gt; list[PcoEventPeriodsModel]</code>","text":"Source code in <code>src/pcoapi/checkins.py</code> <pre><code>def get_most_recent_event_periods(self, event_id: int) -&gt; list[PcoEventPeriodsModel]:\n    params = {\"order\": \"-starts_at\", \"per_page\": \"25\"}\n    response = self.api.limited_get(f\"/check-ins/v2/events/{event_id}/event_periods\", **params)\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoEventPeriodsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/","title":"groups","text":"<p>This module contains the PcoApi People class.</p>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Events","title":"<code>Events</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>class Events:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_by_id(self, event_id: int) -&gt; PcoGroupsEventModel:\n        response = self.api.get(f\"/groups/v2/events/{event_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoGroupsEventModel)\n        return filled_data_model\n\n    def get_attendance_recordings(self, event_id: int) -&gt; PcoGroupsEventAttendanceRecordingModel:\n        response = self.api.get(f\"/groups/v2/events/{event_id}/attendance_recording\")\n        filled_data_model = convert_response_data_to_model(\n            response, PcoGroupsEventAttendanceRecordingModel\n        )\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Events.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.Events.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Events.get_attendance_recordings","title":"<code>get_attendance_recordings(event_id: int) -&gt; PcoGroupsEventAttendanceRecordingModel</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_attendance_recordings(self, event_id: int) -&gt; PcoGroupsEventAttendanceRecordingModel:\n    response = self.api.get(f\"/groups/v2/events/{event_id}/attendance_recording\")\n    filled_data_model = convert_response_data_to_model(\n        response, PcoGroupsEventAttendanceRecordingModel\n    )\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Events.get_by_id","title":"<code>get_by_id(event_id: int) -&gt; PcoGroupsEventModel</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_by_id(self, event_id: int) -&gt; PcoGroupsEventModel:\n    response = self.api.get(f\"/groups/v2/events/{event_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoGroupsEventModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.GroupTypes","title":"<code>GroupTypes</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>class GroupTypes:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_by_id(self, group_type_id: int) -&gt; PcoGroupTypesModel:\n        response = self.api.get(f\"/groups/v2/group_types/{group_type_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoGroupTypesModel)\n        return filled_data_model\n\n    def get_all_groups_by_type(self, group_type_id: int) -&gt; list[PcoGroupsModel]:\n        response = self.api.get(f\"/groups/v2/group_types/{group_type_id}/groups\")\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupsModel)\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.GroupTypes.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.GroupTypes.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.GroupTypes.get_all_groups_by_type","title":"<code>get_all_groups_by_type(group_type_id: int) -&gt; list[PcoGroupsModel]</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_all_groups_by_type(self, group_type_id: int) -&gt; list[PcoGroupsModel]:\n    response = self.api.get(f\"/groups/v2/group_types/{group_type_id}/groups\")\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.GroupTypes.get_by_id","title":"<code>get_by_id(group_type_id: int) -&gt; PcoGroupTypesModel</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_by_id(self, group_type_id: int) -&gt; PcoGroupTypesModel:\n    response = self.api.get(f\"/groups/v2/group_types/{group_type_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoGroupTypesModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups","title":"<code>Groups</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>class Groups:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_by_id(self, group_id: int) -&gt; PcoGroupsModel:\n        response = self.api.get(f\"/groups/v2/groups/{group_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoGroupsModel)\n        return filled_data_model\n\n    def get_tags_by_group_id(self, group_id: int) -&gt; list[PcoGroupTagsModel]:\n        response = self.api.get(f\"/groups/v2/groups/{group_id}/tags\")\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupTagsModel)\n        return filled_data_model\n\n    def get_all_events_by_group_id(\n        self, group_id: int, **param: PcoParamsType\n    ) -&gt; list[PcoGroupsEventModel]:\n        response = self.api.get(f\"/groups/v2/groups/{group_id}/events\", **param)\n        filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupsEventModel)\n        return filled_data_model\n\n    def get_all_members_by_group_id(\n        self, group_id: int, **param: PcoParamsType\n    ) -&gt; list[PcoGroupsMembershipModel]:\n        response = self.api.get(f\"/groups/v2/groups/{group_id}/memberships\", **param)\n        filled_data_model = convert_response_data_to_list_of_model(\n            response, PcoGroupsMembershipModel\n        )\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.get_all_events_by_group_id","title":"<code>get_all_events_by_group_id(group_id: int, **param: PcoParamsType) -&gt; list[PcoGroupsEventModel]</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_all_events_by_group_id(\n    self, group_id: int, **param: PcoParamsType\n) -&gt; list[PcoGroupsEventModel]:\n    response = self.api.get(f\"/groups/v2/groups/{group_id}/events\", **param)\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupsEventModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.get_all_members_by_group_id","title":"<code>get_all_members_by_group_id(group_id: int, **param: PcoParamsType) -&gt; list[PcoGroupsMembershipModel]</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_all_members_by_group_id(\n    self, group_id: int, **param: PcoParamsType\n) -&gt; list[PcoGroupsMembershipModel]:\n    response = self.api.get(f\"/groups/v2/groups/{group_id}/memberships\", **param)\n    filled_data_model = convert_response_data_to_list_of_model(\n        response, PcoGroupsMembershipModel\n    )\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.get_by_id","title":"<code>get_by_id(group_id: int) -&gt; PcoGroupsModel</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_by_id(self, group_id: int) -&gt; PcoGroupsModel:\n    response = self.api.get(f\"/groups/v2/groups/{group_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoGroupsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.Groups.get_tags_by_group_id","title":"<code>get_tags_by_group_id(group_id: int) -&gt; list[PcoGroupTagsModel]</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_tags_by_group_id(self, group_id: int) -&gt; list[PcoGroupTagsModel]:\n    response = self.api.get(f\"/groups/v2/groups/{group_id}/tags\")\n    filled_data_model = convert_response_data_to_list_of_model(response, PcoGroupTagsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.TagGroups","title":"<code>TagGroups</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>class TagGroups:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_by_id(self, tag_group_id: int) -&gt; PcoGroupTagsModel:\n        response = self.api.get(f\"/groups/v2/tag_groups/{tag_group_id}\")\n        filled_data_model = convert_response_data_to_model(response, PcoGroupTagsModel)\n        return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.TagGroups.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TagGroups.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.TagGroups.get_by_id","title":"<code>get_by_id(tag_group_id: int) -&gt; PcoGroupTagsModel</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def get_by_id(self, tag_group_id: int) -&gt; PcoGroupTagsModel:\n    response = self.api.get(f\"/groups/v2/tag_groups/{tag_group_id}\")\n    filled_data_model = convert_response_data_to_model(response, PcoGroupTagsModel)\n    return filled_data_model\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups","title":"<code>TopLevelGroups</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>class TopLevelGroups:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n        self.events = Events(self.api)\n        self.groups = Groups(self.api)\n        self.group_types = GroupTypes(self.api)\n        self.tag_groups = TagGroups(self.api)\n</code></pre>"},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.events","title":"<code>events = Events(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.group_types","title":"<code>group_types = GroupTypes(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.groups","title":"<code>groups = Groups(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.tag_groups","title":"<code>tag_groups = TagGroups(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/groups/#pcoapi.groups.TopLevelGroups.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/groups.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n    self.events = Events(self.api)\n    self.groups = Groups(self.api)\n    self.group_types = GroupTypes(self.api)\n    self.tag_groups = TagGroups(self.api)\n</code></pre>"},{"location":"reference/pcoapi/helpers/","title":"helpers","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.GeneratorJsonType","title":"<code>GeneratorJsonType = Callable[[str], JsonObjectType]</code>  <code>module-attribute</code>","text":"<p>Callable that returns a JSON object from a file path.</p>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.JsonArrayType","title":"<code>JsonArrayType = List[JsonValueType]</code>  <code>module-attribute</code>","text":"<p>List that can be returned by the standard JSON deserializing process.</p>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.JsonObjectType","title":"<code>JsonObjectType = Dict[str, JsonValueType]</code>  <code>module-attribute</code>","text":"<p>Dictionary that can be returned by the standard JSON deserializing process.</p>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.JsonValueType","title":"<code>JsonValueType = Dict[str, 'JsonValueType'] | List['JsonValueType'] | str | int | float | bool | None</code>  <code>module-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoParamsType","title":"<code>PcoParamsType = Union[Dict[str, str], str, None]</code>  <code>module-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.T_Model","title":"<code>T_Model = TypeVar('T_Model', bound=PcoBaseModel)</code>  <code>module-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoDataType","title":"<code>PcoDataType</code>","text":"<p>             Bases: <code>TypedDict</code></p> Source code in <code>src/pcoapi/helpers.py</code> <pre><code>class PcoDataType(TypedDict):\n    type: str\n    id: str\n    attributes: dict[str, object]\n    links: dict[str, str]\n</code></pre>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoDataType.attributes","title":"<code>attributes: dict[str, object]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoDataType.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoDataType.links","title":"<code>links: dict[str, str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoDataType.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType","title":"<code>PcoMetaType</code>","text":"<p>             Bases: <code>TypedDict</code></p> Source code in <code>src/pcoapi/helpers.py</code> <pre><code>class PcoMetaType(TypedDict):\n    total_count: int\n    count: int\n    next: dict[str, str | int]\n    can_order_by: list[str]\n    can_query_by: list[str]\n    can_include: list[str]\n    parent: dict[str, str]\n</code></pre>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.can_include","title":"<code>can_include: list[str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.can_order_by","title":"<code>can_order_by: list[str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.can_query_by","title":"<code>can_query_by: list[str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.count","title":"<code>count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.next","title":"<code>next: dict[str, str | int]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.parent","title":"<code>parent: dict[str, str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoMetaType.total_count","title":"<code>total_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoResponseType","title":"<code>PcoResponseType</code>","text":"<p>             Bases: <code>TypedDict</code></p> Source code in <code>src/pcoapi/helpers.py</code> <pre><code>class PcoResponseType(TypedDict):\n    links: dict[str, str]\n    data: list[PcoDataType] | PcoDataType\n    included: list[PcoDataType]\n    meta: PcoMetaType\n</code></pre>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoResponseType.data","title":"<code>data: list[PcoDataType] | PcoDataType</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoResponseType.included","title":"<code>included: list[PcoDataType]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoResponseType.links","title":"<code>links: dict[str, str]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.PcoResponseType.meta","title":"<code>meta: PcoMetaType</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.convert_response_data_to_list_of_model","title":"<code>convert_response_data_to_list_of_model(response: PcoResponseType, model_class: type[T_Model]) -&gt; list[T_Model]</code>","text":"Source code in <code>src/pcoapi/helpers.py</code> <pre><code>def convert_response_data_to_list_of_model(\n    response: PcoResponseType, model_class: type[T_Model]\n) -&gt; list[T_Model]:\n    if \"data\" not in response:\n        raise ValueError(\"Response does not contain data.\")\n    assert isinstance(response[\"data\"], list)\n    return [model_class(**item) for item in response[\"data\"]]\n</code></pre>"},{"location":"reference/pcoapi/helpers/#pcoapi.helpers.convert_response_data_to_model","title":"<code>convert_response_data_to_model(response: PcoResponseType, model_class: type[T_Model]) -&gt; T_Model</code>","text":"Source code in <code>src/pcoapi/helpers.py</code> <pre><code>def convert_response_data_to_model(\n    response: PcoResponseType, model_class: type[T_Model]\n) -&gt; T_Model:\n    if \"data\" not in response:\n        raise ValueError(\"Response does not contain data.\")\n    assert isinstance(response[\"data\"], dict)\n    return model_class(**response[\"data\"])\n</code></pre>"},{"location":"reference/pcoapi/models/","title":"Models","text":""},{"location":"reference/pcoapi/people/","title":"people","text":"<p>This module contains the PcoApi People class.</p>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists","title":"<code>Lists</code>","text":"<p>All methods for the PCO API Lists endpoint</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>class Lists:\n\"\"\"All methods for the PCO API Lists endpoint\"\"\"\n\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_most_recent(self) -&gt; list[PcoListModel]:\n\"\"\"\n        Requests the 25 most recently updated lists from the PCO API\n        \"\"\"\n        response = self.api.get(\"/people/v2/lists?order=-updated_at\")\n        data_model = convert_response_data_to_list_of_model(response, PcoListModel)\n        return data_model\n\n    def get_by_id(self, list_id: int) -&gt; PcoListModel:\n\"\"\"\n        Requests a list from the PCO API\n        \"\"\"\n        response = self.api.get(f\"/people/v2/lists/{list_id}\")\n        data_model = convert_response_data_to_model(response, PcoListModel)\n        return data_model\n\n    def get_people_by_id(self, list_id: int) -&gt; list[PcoPersonModel]:\n\"\"\"\n        Requests the people in a list from the PCO API\n        \"\"\"\n        response = self.api.get(f\"/people/v2/lists/{list_id}/people\")\n        data_model = convert_response_data_to_list_of_model(response, PcoPersonModel)\n        return data_model\n\n    def get_by_name(self, name: str) -&gt; list[PcoListModel]:\n\"\"\"\n        Requests a list from the PCO API by name\n        \"\"\"\n        response = self.api.get(f\"/people/v2/lists?where[name]={name}\")\n        data_model = convert_response_data_to_list_of_model(response, PcoListModel)\n        return data_model\n\n    def get_closest_to_name(self, name: str) -&gt; PcoListModel:\n\"\"\"\n        Requests the closest matching list from the PCO API by name\n        \"\"\"\n        closest_index = 0\n        try:\n            pco_list = self.get_by_name(name)[closest_index]\n        except IndexError:\n            raise IndexError(f\"Could not find a list named {name}\") from IndexError\n        return pco_list\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.get_by_id","title":"<code>get_by_id(list_id: int) -&gt; PcoListModel</code>","text":"<p>Requests a list from the PCO API</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_by_id(self, list_id: int) -&gt; PcoListModel:\n\"\"\"\n    Requests a list from the PCO API\n    \"\"\"\n    response = self.api.get(f\"/people/v2/lists/{list_id}\")\n    data_model = convert_response_data_to_model(response, PcoListModel)\n    return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.get_by_name","title":"<code>get_by_name(name: str) -&gt; list[PcoListModel]</code>","text":"<p>Requests a list from the PCO API by name</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_by_name(self, name: str) -&gt; list[PcoListModel]:\n\"\"\"\n    Requests a list from the PCO API by name\n    \"\"\"\n    response = self.api.get(f\"/people/v2/lists?where[name]={name}\")\n    data_model = convert_response_data_to_list_of_model(response, PcoListModel)\n    return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.get_closest_to_name","title":"<code>get_closest_to_name(name: str) -&gt; PcoListModel</code>","text":"<p>Requests the closest matching list from the PCO API by name</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_closest_to_name(self, name: str) -&gt; PcoListModel:\n\"\"\"\n    Requests the closest matching list from the PCO API by name\n    \"\"\"\n    closest_index = 0\n    try:\n        pco_list = self.get_by_name(name)[closest_index]\n    except IndexError:\n        raise IndexError(f\"Could not find a list named {name}\") from IndexError\n    return pco_list\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.get_most_recent","title":"<code>get_most_recent() -&gt; list[PcoListModel]</code>","text":"<p>Requests the 25 most recently updated lists from the PCO API</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_most_recent(self) -&gt; list[PcoListModel]:\n\"\"\"\n    Requests the 25 most recently updated lists from the PCO API\n    \"\"\"\n    response = self.api.get(\"/people/v2/lists?order=-updated_at\")\n    data_model = convert_response_data_to_list_of_model(response, PcoListModel)\n    return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.Lists.get_people_by_id","title":"<code>get_people_by_id(list_id: int) -&gt; list[PcoPersonModel]</code>","text":"<p>Requests the people in a list from the PCO API</p> Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_people_by_id(self, list_id: int) -&gt; list[PcoPersonModel]:\n\"\"\"\n    Requests the people in a list from the PCO API\n    \"\"\"\n    response = self.api.get(f\"/people/v2/lists/{list_id}/people\")\n    data_model = convert_response_data_to_list_of_model(response, PcoPersonModel)\n    return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.People","title":"<code>People</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>class People:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n\n    def get_field_data(self, id: int, **params: PcoParamsType) -&gt; list[PcoPersonFieldDataModel]:\n        response = self.api.get(f\"/people/v2/people/{id}/field_data\", **params)\n        data_model = convert_response_data_to_list_of_model(response, PcoPersonFieldDataModel)\n        return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.People.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/people/#pcoapi.people.People.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.People.get_field_data","title":"<code>get_field_data(id: int, **params: PcoParamsType) -&gt; list[PcoPersonFieldDataModel]</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>def get_field_data(self, id: int, **params: PcoParamsType) -&gt; list[PcoPersonFieldDataModel]:\n    response = self.api.get(f\"/people/v2/people/{id}/field_data\", **params)\n    data_model = convert_response_data_to_list_of_model(response, PcoPersonFieldDataModel)\n    return data_model\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.TopLevelPeople","title":"<code>TopLevelPeople</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>class TopLevelPeople:\n    def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n        self.api = pcoapi\n        self.lists = Lists(self.api)\n        self.people = People(self.api)\n</code></pre>"},{"location":"reference/pcoapi/people/#pcoapi.people.TopLevelPeople.api","title":"<code>api = pcoapi</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/people/#pcoapi.people.TopLevelPeople.lists","title":"<code>lists = Lists(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/people/#pcoapi.people.TopLevelPeople.people","title":"<code>people = People(self.api)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/people/#pcoapi.people.TopLevelPeople.__init__","title":"<code>__init__(pcoapi: PyPcoWrapper) -&gt; None</code>","text":"Source code in <code>src/pcoapi/people.py</code> <pre><code>def __init__(self, pcoapi: PyPcoWrapper) -&gt; None:\n    self.api = pcoapi\n    self.lists = Lists(self.api)\n    self.people = People(self.api)\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/","title":"pypco_wrapper","text":"<p>Wrapper for the pypco library</p>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.OverloadedPco","title":"<code>OverloadedPco</code>","text":"<p>             Bases: <code>PCO</code></p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>class OverloadedPco(pypco.PCO):  # type: ignore\n    def __init__(self, *args, **kwargs) -&gt; None:  # type: ignore\n        super().__init__(*args, **kwargs)\n\n    def get(self, url: str, **params) -&gt; PcoResponseType:  # type: ignore\n        if params is None:\n            params = {}\n        if \"per_page\" not in params:\n            params[\"per_page\"] = 100\n        response: PcoResponseType = super().get(url, **params)\n        if \"links\" not in response:\n            return response\n        if \"next\" in response[\"links\"]:\n            next_url = response[\"links\"][\"next\"]\n            next_response = self.get(next_url, **params)\n            response[\"data\"] = response[\"data\"].__add__(next_response[\"data\"])  # type: ignore\n        return response\n\n    def limited_get(self, url: str, **params: PcoParamsType) -&gt; PcoResponseType:\n        response: PcoResponseType = super().get(url, **params)\n        return response\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.OverloadedPco.__init__","title":"<code>__init__(*args, **kwargs) -&gt; None</code>","text":"Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def __init__(self, *args, **kwargs) -&gt; None:  # type: ignore\n    super().__init__(*args, **kwargs)\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.OverloadedPco.get","title":"<code>get(url: str, **params) -&gt; PcoResponseType</code>","text":"Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def get(self, url: str, **params) -&gt; PcoResponseType:  # type: ignore\n    if params is None:\n        params = {}\n    if \"per_page\" not in params:\n        params[\"per_page\"] = 100\n    response: PcoResponseType = super().get(url, **params)\n    if \"links\" not in response:\n        return response\n    if \"next\" in response[\"links\"]:\n        next_url = response[\"links\"][\"next\"]\n        next_response = self.get(next_url, **params)\n        response[\"data\"] = response[\"data\"].__add__(next_response[\"data\"])  # type: ignore\n    return response\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.OverloadedPco.limited_get","title":"<code>limited_get(url: str, **params: PcoParamsType) -&gt; PcoResponseType</code>","text":"Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def limited_get(self, url: str, **params: PcoParamsType) -&gt; PcoResponseType:\n    response: PcoResponseType = super().get(url, **params)\n    return response\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper","title":"<code>PyPcoWrapper</code>","text":"<p>Wrapper Class for the pypco library</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>class PyPcoWrapper:\n\"\"\"\n    Wrapper Class for the pypco library\n    \"\"\"\n\n    def __init__(\n        self,\n        application_id: str | None = None,  # pylint: disable=unsubscriptable-object\n        secret: str | None = None,  # pylint: disable=unsubscriptable-object\n        token: str | None = None,  # pylint: disable=unsubscriptable-object\n    ):\n        api_base: str = \"https://api.planningcenteronline.com\"\n        timeout: int = 60\n        upload_url: str = \"https://upload.planningcenteronline.com/v2/files\"\n        upload_timeout: int = 300\n        timeout_retries: int = 3\n        self.pco = OverloadedPco(\n            application_id=application_id,\n            secret=secret,\n            token=token,\n            api_base=api_base,\n            timeout=timeout,\n            upload_url=upload_url,\n            upload_timeout=upload_timeout,\n            timeout_retries=timeout_retries,\n        )\n\n    def request_response(\n        self,\n        method: str,\n        url: str,\n        payload: Any | None | None = None,  # pylint: disable=unsubscriptable-object\n        upload: str | None = None,  # pylint: disable=unsubscriptable-object\n        **params: PcoParamsType,\n    ) -&gt; requests.Response:\n\"\"\"A generic entry point for making a managed request against PCO.\n\n        This function will return a Requests response object, allowing access to\n        all request data and metadata. Executed request could be one of the standard\n        HTTP verbs or a file upload. If you're just looking for your data (json), use\n        the request_json() function or get(), post(), etc.\n\n        Args:\n            method (str): The HTTP method to use for this request.\n            url (str): The URL against which this request will be executed.\n            payload (obj): A json-serializable Python object to be sent as the post/put payload.\n            upload (str): The path to a file to upload.\n            params (obj): A dictionary or list of tuples or bytes to send in the query string.\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            requests.Response: The response to this request.\n        \"\"\"\n\n        return self.pco.request_response(  # type: ignore\n            method=method, url=url, payload=payload, upload=upload, **params\n        )\n\n    def request_json(\n        self,\n        method: str,\n        url: str,\n        payload: Any | None = None,  # pylint: disable=unsubscriptable-object\n        upload: str | None = None,  # pylint: disable=unsubscriptable-object\n        **params: PcoParamsType,\n    ) -&gt; dict[Any, Any] | None:  # pylint: disable=unsubscriptable-object\n\"\"\"A generic entry point for making a managed request against PCO.\n\n        This function will return the payload from the PCO response (a dict).\n\n        Args:\n            method (str): The HTTP method to use for this request.\n            url (str): The URL against which this request will be executed.\n            payload (obj): A json-serializable Python object to be sent as the post/put payload.\n            upload (str): The path to a file to upload.\n            params (obj): A dictionary or list of tuples or bytes to send in the query string.\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            dict: The payload from the response to this request.\n        \"\"\"\n\n        return self.pco.request_json(  # type: ignore\n            method=method, url=url, payload=payload, upload=upload, **params\n        )\n\n    def get(\n        self, url: str, **params: PcoParamsType\n    ) -&gt; PcoResponseType:  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a GET request against the PCO API.\n\n        Performs a fully managed GET request (handles ratelimiting, timeouts, etc.).\n\n        Args:\n            url (str): The URL against which to perform the request. Can include\n                what's been set as api_base, which will be ignored if this value is also\n                present in your URL.\n            params: Any named arguments will be passed as query parameters.\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            dict: The payload returned by the API for this request.\n        \"\"\"\n        return self.pco.get(url=url, **params)\n\n    def limited_get(self, url: str, **params: PcoParamsType) -&gt; PcoResponseType:\n        return self.pco.limited_get(url=url, **params)\n\n    def post(\n        self,\n        url: str,\n        payload: dict | None = None,  # type: ignore\n        **params: PcoParamsType,  # pylint: disable=unsubscriptable-object\n    ) -&gt; dict | None:  # type: ignore  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a POST request against the PCO API.\n\n        Performs a fully managed POST request (handles ratelimiting, timeouts, etc.).\n\n        Args:\n            url (str): The URL against which to perform the request. Can include\n                what's been set as api_base, which will be ignored if this value is also\n                present in your URL.\n            payload (dict): The payload for the POST request. Must be serializable to JSON!\n            params: Any named arguments will be passed as query parameters. Values must\n                be of type str!\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            dict: The payload returned by the API for this request.\n        \"\"\"\n\n        return self.pco.post(url=url, payload=payload, **params)  # type: ignore\n\n    def patch(\n        self,\n        url: str,\n        payload: dict | None = None,  # type: ignore\n        **params: PcoParamsType,  # pylint: disable=unsubscriptable-object\n    ) -&gt; dict | None:  # type: ignore  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a PATCH request against the PCO API.\n\n        Performs a fully managed PATCH request (handles ratelimiting, timeouts, etc.).\n\n        Args:\n            url (str): The URL against which to perform the request. Can include\n                what's been set as api_base, which will be ignored if this value is also\n                present in your URL.\n            payload (dict): The payload for the PUT request. Must be serializable to JSON!\n            params: Any named arguments will be passed as query parameters. Values must\n                be of type str!\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            dict: The payload returned by the API for this request.\n        \"\"\"\n\n        return self.pco.patch(url=url, payload=payload, **params)  # type: ignore\n\n    def delete(self, url: str, **params: PcoParamsType) -&gt; requests.Response:\n\"\"\"Perform a DELETE request against the PCO API.\n\n        Performs a fully managed DELETE request (handles ratelimiting, timeouts, etc.).\n\n        Args:\n            url (str): The URL against which to perform the request. Can include\n                what's been set as api_base, which will be ignored if this value is also\n                present in your URL.\n            params: Any named arguments will be passed as query parameters. Values must\n                be of type str!\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            requests.Response: The response object returned by the API for this request.\n            A successful delete request will return a response with an empty payload,\n            so we return the response object here instead.\n        \"\"\"\n\n        return self.pco.delete(url=url, **params)  # type: ignore\n\n    def iterate(\n        self, url: str, offset: int = 0, per_page: int = 25, **params: str\n    ) -&gt; Iterator[dict[str, object]]:  # pylint: disable=too-many-branches\n\"\"\"Iterate a list of objects in a response, handling pagination.\n\n        Basically, this function wraps get in a generator function designed for\n        processing requests that will return multiple objects. Pagination is\n        transparently handled.\n\n        Objects specified as includes will be injected into their associated\n        object and returned.\n\n        Args:\n            url (str): The URL against which to perform the request. Can include\n                what's been set as api_base, which will be ignored if this value is also\n                present in your URL.\n            offset (int): The offset at which to start. Usually going to be 0 (the default).\n            per_page (int): The number of results that should be requested in a single page.\n                Valid values are 1 - 100, defaults to the PCO default of 25.\n            params: Any additional named arguments will be passed as query parameters. Values must\n                be of type str!\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Yields:\n            dict: Each object returned by the API for this request. Returns \"data\",\n                \"included\", and \"meta\" nodes for each response. Note that data is processed\n                somewhat before being returned from the API. Namely, includes are injected into\n                the object(s) with which they are associated.\n                This makes it easier to process includes associated with specific objects\n                since they are accessible directly from each returned object.\n        \"\"\"\n\n        return self.pco.iterate(  # type: ignore\n            url=url, offset=offset, per_page=per_page, **params\n        )\n\n    def upload(\n        self, file_path: str, **params: PcoParamsType\n    ) -&gt; dict | None:  # type: ignore # pylint: disable=unsubscriptable-object\n\"\"\"Upload the file at the specified path to PCO.\n\n        Args:\n            file_path (str): The path to the file to be uploaded to PCO.\n            params : Any named arguments will be passed as query parameters. Values must\n                be of type str!\n\n        Raises:\n            PCORequestTimeoutException: The request to PCO timed out the maximum number of\n                times.\n            PCOUnexpectedRequestException: An unexpected error occurred when making your\n                request.\n            PCORequestException: The response from the PCO API indicated an error with your\n                request.\n\n        Returns:\n            dict: The PCO response from the file upload.\n        \"\"\"\n\n        return self.pco.upload(file_path=file_path, **params)  # type: ignore\n\n    def template(\n        self, object_type: str, attributes: dict | None = None  # type: ignore\n    ) -&gt; dict:  # type: ignore # pylint: disable=unsubscriptable-object\n\"\"\"Get template JSON for creating a new object.\n\n        Args:\n            object_type (str): The type of object to be created.\n            attributes (dict): The new objects attributes. Defaults to empty.\n\n        Returns:\n            dict: A template from which to set the new object's attributes.\n        \"\"\"\n        return self.pco.template(object_type=object_type, attributes=attributes)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.pco","title":"<code>pco = OverloadedPco(application_id=application_id, secret=secret, token=token, api_base=api_base, timeout=timeout, upload_url=upload_url, upload_timeout=upload_timeout, timeout_retries=timeout_retries)</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.__init__","title":"<code>__init__(application_id: str | None = None, secret: str | None = None, token: str | None = None)</code>","text":"Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def __init__(\n    self,\n    application_id: str | None = None,  # pylint: disable=unsubscriptable-object\n    secret: str | None = None,  # pylint: disable=unsubscriptable-object\n    token: str | None = None,  # pylint: disable=unsubscriptable-object\n):\n    api_base: str = \"https://api.planningcenteronline.com\"\n    timeout: int = 60\n    upload_url: str = \"https://upload.planningcenteronline.com/v2/files\"\n    upload_timeout: int = 300\n    timeout_retries: int = 3\n    self.pco = OverloadedPco(\n        application_id=application_id,\n        secret=secret,\n        token=token,\n        api_base=api_base,\n        timeout=timeout,\n        upload_url=upload_url,\n        upload_timeout=upload_timeout,\n        timeout_retries=timeout_retries,\n    )\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.delete","title":"<code>delete(url: str, **params: PcoParamsType) -&gt; requests.Response</code>","text":"<p>Perform a DELETE request against the PCO API.</p> <p>Performs a fully managed DELETE request (handles ratelimiting, timeouts, etc.).</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL against which to perform the request. Can include what's been set as api_base, which will be ignored if this value is also present in your URL.</p> required <code>params</code> <code>PcoParamsType</code> <p>Any named arguments will be passed as query parameters. Values must be of type str!</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Type Description <code>Response</code> <p>requests.Response: The response object returned by the API for this request.</p> <code>Response</code> <p>A successful delete request will return a response with an empty payload,</p> <code>Response</code> <p>so we return the response object here instead.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def delete(self, url: str, **params: PcoParamsType) -&gt; requests.Response:\n\"\"\"Perform a DELETE request against the PCO API.\n\n    Performs a fully managed DELETE request (handles ratelimiting, timeouts, etc.).\n\n    Args:\n        url (str): The URL against which to perform the request. Can include\n            what's been set as api_base, which will be ignored if this value is also\n            present in your URL.\n        params: Any named arguments will be passed as query parameters. Values must\n            be of type str!\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        requests.Response: The response object returned by the API for this request.\n        A successful delete request will return a response with an empty payload,\n        so we return the response object here instead.\n    \"\"\"\n\n    return self.pco.delete(url=url, **params)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.get","title":"<code>get(url: str, **params: PcoParamsType) -&gt; PcoResponseType</code>","text":"<p>Perform a GET request against the PCO API.</p> <p>Performs a fully managed GET request (handles ratelimiting, timeouts, etc.).</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL against which to perform the request. Can include what's been set as api_base, which will be ignored if this value is also present in your URL.</p> required <code>params</code> <code>PcoParamsType</code> <p>Any named arguments will be passed as query parameters.</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>PcoResponseType</code> <p>The payload returned by the API for this request.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def get(\n    self, url: str, **params: PcoParamsType\n) -&gt; PcoResponseType:  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a GET request against the PCO API.\n\n    Performs a fully managed GET request (handles ratelimiting, timeouts, etc.).\n\n    Args:\n        url (str): The URL against which to perform the request. Can include\n            what's been set as api_base, which will be ignored if this value is also\n            present in your URL.\n        params: Any named arguments will be passed as query parameters.\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        dict: The payload returned by the API for this request.\n    \"\"\"\n    return self.pco.get(url=url, **params)\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.iterate","title":"<code>iterate(url: str, offset: int = 0, per_page: int = 25, **params: str) -&gt; Iterator[dict[str, object]]</code>","text":"<p>Iterate a list of objects in a response, handling pagination.</p> <p>Basically, this function wraps get in a generator function designed for processing requests that will return multiple objects. Pagination is transparently handled.</p> <p>Objects specified as includes will be injected into their associated object and returned.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL against which to perform the request. Can include what's been set as api_base, which will be ignored if this value is also present in your URL.</p> required <code>offset</code> <code>int</code> <p>The offset at which to start. Usually going to be 0 (the default).</p> <code>0</code> <code>per_page</code> <code>int</code> <p>The number of results that should be requested in a single page. Valid values are 1 - 100, defaults to the PCO default of 25.</p> <code>25</code> <code>params</code> <code>str</code> <p>Any additional named arguments will be passed as query parameters. Values must be of type str!</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Yields:</p> Name Type Description <code>dict</code> <code>dict[str, object]</code> <p>Each object returned by the API for this request. Returns \"data\", \"included\", and \"meta\" nodes for each response. Note that data is processed somewhat before being returned from the API. Namely, includes are injected into the object(s) with which they are associated. This makes it easier to process includes associated with specific objects since they are accessible directly from each returned object.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def iterate(\n    self, url: str, offset: int = 0, per_page: int = 25, **params: str\n) -&gt; Iterator[dict[str, object]]:  # pylint: disable=too-many-branches\n\"\"\"Iterate a list of objects in a response, handling pagination.\n\n    Basically, this function wraps get in a generator function designed for\n    processing requests that will return multiple objects. Pagination is\n    transparently handled.\n\n    Objects specified as includes will be injected into their associated\n    object and returned.\n\n    Args:\n        url (str): The URL against which to perform the request. Can include\n            what's been set as api_base, which will be ignored if this value is also\n            present in your URL.\n        offset (int): The offset at which to start. Usually going to be 0 (the default).\n        per_page (int): The number of results that should be requested in a single page.\n            Valid values are 1 - 100, defaults to the PCO default of 25.\n        params: Any additional named arguments will be passed as query parameters. Values must\n            be of type str!\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Yields:\n        dict: Each object returned by the API for this request. Returns \"data\",\n            \"included\", and \"meta\" nodes for each response. Note that data is processed\n            somewhat before being returned from the API. Namely, includes are injected into\n            the object(s) with which they are associated.\n            This makes it easier to process includes associated with specific objects\n            since they are accessible directly from each returned object.\n    \"\"\"\n\n    return self.pco.iterate(  # type: ignore\n        url=url, offset=offset, per_page=per_page, **params\n    )\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.limited_get","title":"<code>limited_get(url: str, **params: PcoParamsType) -&gt; PcoResponseType</code>","text":"Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def limited_get(self, url: str, **params: PcoParamsType) -&gt; PcoResponseType:\n    return self.pco.limited_get(url=url, **params)\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.patch","title":"<code>patch(url: str, payload: dict | None = None, **params: PcoParamsType) -&gt; dict | None</code>","text":"<p>Perform a PATCH request against the PCO API.</p> <p>Performs a fully managed PATCH request (handles ratelimiting, timeouts, etc.).</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL against which to perform the request. Can include what's been set as api_base, which will be ignored if this value is also present in your URL.</p> required <code>payload</code> <code>dict</code> <p>The payload for the PUT request. Must be serializable to JSON!</p> <code>None</code> <code>params</code> <code>PcoParamsType</code> <p>Any named arguments will be passed as query parameters. Values must be of type str!</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict | None</code> <p>The payload returned by the API for this request.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def patch(\n    self,\n    url: str,\n    payload: dict | None = None,  # type: ignore\n    **params: PcoParamsType,  # pylint: disable=unsubscriptable-object\n) -&gt; dict | None:  # type: ignore  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a PATCH request against the PCO API.\n\n    Performs a fully managed PATCH request (handles ratelimiting, timeouts, etc.).\n\n    Args:\n        url (str): The URL against which to perform the request. Can include\n            what's been set as api_base, which will be ignored if this value is also\n            present in your URL.\n        payload (dict): The payload for the PUT request. Must be serializable to JSON!\n        params: Any named arguments will be passed as query parameters. Values must\n            be of type str!\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        dict: The payload returned by the API for this request.\n    \"\"\"\n\n    return self.pco.patch(url=url, payload=payload, **params)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.post","title":"<code>post(url: str, payload: dict | None = None, **params: PcoParamsType) -&gt; dict | None</code>","text":"<p>Perform a POST request against the PCO API.</p> <p>Performs a fully managed POST request (handles ratelimiting, timeouts, etc.).</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL against which to perform the request. Can include what's been set as api_base, which will be ignored if this value is also present in your URL.</p> required <code>payload</code> <code>dict</code> <p>The payload for the POST request. Must be serializable to JSON!</p> <code>None</code> <code>params</code> <code>PcoParamsType</code> <p>Any named arguments will be passed as query parameters. Values must be of type str!</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict | None</code> <p>The payload returned by the API for this request.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def post(\n    self,\n    url: str,\n    payload: dict | None = None,  # type: ignore\n    **params: PcoParamsType,  # pylint: disable=unsubscriptable-object\n) -&gt; dict | None:  # type: ignore  # pylint: disable=unsubscriptable-object\n\"\"\"Perform a POST request against the PCO API.\n\n    Performs a fully managed POST request (handles ratelimiting, timeouts, etc.).\n\n    Args:\n        url (str): The URL against which to perform the request. Can include\n            what's been set as api_base, which will be ignored if this value is also\n            present in your URL.\n        payload (dict): The payload for the POST request. Must be serializable to JSON!\n        params: Any named arguments will be passed as query parameters. Values must\n            be of type str!\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        dict: The payload returned by the API for this request.\n    \"\"\"\n\n    return self.pco.post(url=url, payload=payload, **params)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.request_json","title":"<code>request_json(method: str, url: str, payload: Any | None = None, upload: str | None = None, **params: PcoParamsType) -&gt; dict[Any, Any] | None</code>","text":"<p>A generic entry point for making a managed request against PCO.</p> <p>This function will return the payload from the PCO response (a dict).</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>The HTTP method to use for this request.</p> required <code>url</code> <code>str</code> <p>The URL against which this request will be executed.</p> required <code>payload</code> <code>obj</code> <p>A json-serializable Python object to be sent as the post/put payload.</p> <code>None</code> <code>upload</code> <code>str</code> <p>The path to a file to upload.</p> <code>None</code> <code>params</code> <code>obj</code> <p>A dictionary or list of tuples or bytes to send in the query string.</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict[Any, Any] | None</code> <p>The payload from the response to this request.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def request_json(\n    self,\n    method: str,\n    url: str,\n    payload: Any | None = None,  # pylint: disable=unsubscriptable-object\n    upload: str | None = None,  # pylint: disable=unsubscriptable-object\n    **params: PcoParamsType,\n) -&gt; dict[Any, Any] | None:  # pylint: disable=unsubscriptable-object\n\"\"\"A generic entry point for making a managed request against PCO.\n\n    This function will return the payload from the PCO response (a dict).\n\n    Args:\n        method (str): The HTTP method to use for this request.\n        url (str): The URL against which this request will be executed.\n        payload (obj): A json-serializable Python object to be sent as the post/put payload.\n        upload (str): The path to a file to upload.\n        params (obj): A dictionary or list of tuples or bytes to send in the query string.\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        dict: The payload from the response to this request.\n    \"\"\"\n\n    return self.pco.request_json(  # type: ignore\n        method=method, url=url, payload=payload, upload=upload, **params\n    )\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.request_response","title":"<code>request_response(method: str, url: str, payload: Any | None | None = None, upload: str | None = None, **params: PcoParamsType) -&gt; requests.Response</code>","text":"<p>A generic entry point for making a managed request against PCO.</p> <p>This function will return a Requests response object, allowing access to all request data and metadata. Executed request could be one of the standard HTTP verbs or a file upload. If you're just looking for your data (json), use the request_json() function or get(), post(), etc.</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>The HTTP method to use for this request.</p> required <code>url</code> <code>str</code> <p>The URL against which this request will be executed.</p> required <code>payload</code> <code>obj</code> <p>A json-serializable Python object to be sent as the post/put payload.</p> <code>None</code> <code>upload</code> <code>str</code> <p>The path to a file to upload.</p> <code>None</code> <code>params</code> <code>obj</code> <p>A dictionary or list of tuples or bytes to send in the query string.</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Type Description <code>Response</code> <p>requests.Response: The response to this request.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def request_response(\n    self,\n    method: str,\n    url: str,\n    payload: Any | None | None = None,  # pylint: disable=unsubscriptable-object\n    upload: str | None = None,  # pylint: disable=unsubscriptable-object\n    **params: PcoParamsType,\n) -&gt; requests.Response:\n\"\"\"A generic entry point for making a managed request against PCO.\n\n    This function will return a Requests response object, allowing access to\n    all request data and metadata. Executed request could be one of the standard\n    HTTP verbs or a file upload. If you're just looking for your data (json), use\n    the request_json() function or get(), post(), etc.\n\n    Args:\n        method (str): The HTTP method to use for this request.\n        url (str): The URL against which this request will be executed.\n        payload (obj): A json-serializable Python object to be sent as the post/put payload.\n        upload (str): The path to a file to upload.\n        params (obj): A dictionary or list of tuples or bytes to send in the query string.\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        requests.Response: The response to this request.\n    \"\"\"\n\n    return self.pco.request_response(  # type: ignore\n        method=method, url=url, payload=payload, upload=upload, **params\n    )\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.template","title":"<code>template(object_type: str, attributes: dict | None = None) -&gt; dict</code>","text":"<p>Get template JSON for creating a new object.</p> <p>Parameters:</p> Name Type Description Default <code>object_type</code> <code>str</code> <p>The type of object to be created.</p> required <code>attributes</code> <code>dict</code> <p>The new objects attributes. Defaults to empty.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>A template from which to set the new object's attributes.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def template(\n    self, object_type: str, attributes: dict | None = None  # type: ignore\n) -&gt; dict:  # type: ignore # pylint: disable=unsubscriptable-object\n\"\"\"Get template JSON for creating a new object.\n\n    Args:\n        object_type (str): The type of object to be created.\n        attributes (dict): The new objects attributes. Defaults to empty.\n\n    Returns:\n        dict: A template from which to set the new object's attributes.\n    \"\"\"\n    return self.pco.template(object_type=object_type, attributes=attributes)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/pypco_wrapper/#pcoapi.pypco_wrapper.PyPcoWrapper.upload","title":"<code>upload(file_path: str, **params: PcoParamsType) -&gt; dict | None</code>","text":"<p>Upload the file at the specified path to PCO.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str</code> <p>The path to the file to be uploaded to PCO.</p> required <code>params</code> <p>Any named arguments will be passed as query parameters. Values must be of type str!</p> <code>{}</code> <p>Raises:</p> Type Description <code>PCORequestTimeoutException</code> <p>The request to PCO timed out the maximum number of times.</p> <code>PCOUnexpectedRequestException</code> <p>An unexpected error occurred when making your request.</p> <code>PCORequestException</code> <p>The response from the PCO API indicated an error with your request.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict | None</code> <p>The PCO response from the file upload.</p> Source code in <code>src/pcoapi/pypco_wrapper.py</code> <pre><code>def upload(\n    self, file_path: str, **params: PcoParamsType\n) -&gt; dict | None:  # type: ignore # pylint: disable=unsubscriptable-object\n\"\"\"Upload the file at the specified path to PCO.\n\n    Args:\n        file_path (str): The path to the file to be uploaded to PCO.\n        params : Any named arguments will be passed as query parameters. Values must\n            be of type str!\n\n    Raises:\n        PCORequestTimeoutException: The request to PCO timed out the maximum number of\n            times.\n        PCOUnexpectedRequestException: An unexpected error occurred when making your\n            request.\n        PCORequestException: The response from the PCO API indicated an error with your\n            request.\n\n    Returns:\n        dict: The PCO response from the file upload.\n    \"\"\"\n\n    return self.pco.upload(file_path=file_path, **params)  # type: ignore\n</code></pre>"},{"location":"reference/pcoapi/models/__init__/","title":"init","text":""},{"location":"reference/pcoapi/models/base_models/","title":"base_models","text":""},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseAttributesModel","title":"<code>PcoBaseAttributesModel</code>","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseAttributesModel(PydanticBaseModel):\n    pass\n</code></pre>"},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseDataModel","title":"<code>PcoBaseDataModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseDataModel(PcoBaseModel):\n    type: str\n    id: str\n</code></pre>"},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseDataModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseDataModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseLinksModel","title":"<code>PcoBaseLinksModel</code>","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseLinksModel(PydanticBaseModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseModel","title":"<code>PcoBaseModel</code>","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseModel(PydanticBaseModel):\n    pass\n</code></pre>"},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseRelationshipsDataModel","title":"<code>PcoBaseRelationshipsDataModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseRelationshipsDataModel(PcoBaseModel):\n    data: PcoBaseDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseRelationshipsDataModel.data","title":"<code>data: PcoBaseDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/base_models/#pcoapi.models.base_models.PcoBaseRelationshipsModel","title":"<code>PcoBaseRelationshipsModel</code>","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/pcoapi/models/base_models.py</code> <pre><code>class PcoBaseRelationshipsModel(PydanticBaseModel):\n    pass\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/","title":"checkins_models","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel","title":"<code>PcoAttendanceTypeAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoAttendanceTypeAttributesModel(PcoBaseAttributesModel):\n    color: str\n    created_at: str\n    limit: Union[int, None]\n    name: str\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel.color","title":"<code>color: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel.limit","title":"<code>limit: Union[int, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeAttributesModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeLinksModel","title":"<code>PcoAttendanceTypeLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoAttendanceTypeLinksModel(PcoBaseLinksModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeRelationshipsModel","title":"<code>PcoAttendanceTypeRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoAttendanceTypeRelationshipsModel(PcoBaseRelationshipsModel):\n    event: PcoEventDataLinkModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypeRelationshipsModel.event","title":"<code>event: PcoEventDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel","title":"<code>PcoAttendanceTypesModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoAttendanceTypesModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoAttendanceTypeAttributesModel\n    relationships: PcoAttendanceTypeRelationshipsModel\n    links: PcoAttendanceTypeLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel.attributes","title":"<code>attributes: PcoAttendanceTypeAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel.links","title":"<code>links: PcoAttendanceTypeLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel.relationships","title":"<code>relationships: PcoAttendanceTypeRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoAttendanceTypesModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventAttendanceTypesDataLinkModel","title":"<code>PcoEventAttendanceTypesDataLinkModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventAttendanceTypesDataLinkModel(PcoBaseModel):\n    data: PcoBaseDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventAttendanceTypesDataLinkModel.data","title":"<code>data: PcoBaseDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventDataLinkModel","title":"<code>PcoEventDataLinkModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventDataLinkModel(PcoBaseModel):\n    data: PcoBaseDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventDataLinkModel.data","title":"<code>data: PcoBaseDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel","title":"<code>PcoEventPeriodCheckInsAttrModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodCheckInsAttrModel(PcoBaseAttributesModel):\n    checked_out_at: Union[str, None]\n    confirmed_at: Union[str, None]\n    created_at: str\n    emergency_contact_name: Union[str, None]\n    emergency_contact_phone_number: Union[str, None]\n    first_name: str\n    last_name: str\n    kind: str\n    medical_notes: Union[str, None]\n    number: Union[int, None]\n    one_time_guest: bool\n    security_code: Union[str, None]\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.checked_out_at","title":"<code>checked_out_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.confirmed_at","title":"<code>confirmed_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.emergency_contact_name","title":"<code>emergency_contact_name: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.emergency_contact_phone_number","title":"<code>emergency_contact_phone_number: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.first_name","title":"<code>first_name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.kind","title":"<code>kind: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.last_name","title":"<code>last_name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.medical_notes","title":"<code>medical_notes: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.number","title":"<code>number: Union[int, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.one_time_guest","title":"<code>one_time_guest: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.security_code","title":"<code>security_code: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsAttrModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel","title":"<code>PcoEventPeriodCheckInsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodCheckInsModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoEventPeriodCheckInsAttrModel\n    relationships: PcoEventPeriodCheckInsRelModel\n    links: PcoBaseLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel.attributes","title":"<code>attributes: PcoEventPeriodCheckInsAttrModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel.links","title":"<code>links: PcoBaseLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel.relationships","title":"<code>relationships: PcoEventPeriodCheckInsRelModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsRelModel","title":"<code>PcoEventPeriodCheckInsRelModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodCheckInsRelModel(PcoBaseRelationshipsModel):\n    event_period: PcoEventPeriodsDataLinkModel\n    person: PcoBaseRelationshipsDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsRelModel.event_period","title":"<code>event_period: PcoEventPeriodsDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodCheckInsRelModel.person","title":"<code>person: PcoBaseRelationshipsDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodRelationshipsModel","title":"<code>PcoEventPeriodRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodRelationshipsModel(PcoBaseRelationshipsModel):\n    event: PcoEventDataLinkModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodRelationshipsModel.event","title":"<code>event: PcoEventDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel","title":"<code>PcoEventPeriodsAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodsAttributesModel(PcoBaseAttributesModel):\n    created_at: str\n    ends_at: str\n    guest_count: int\n    note: Union[str, None]\n    regular_count: int\n    starts_at: str\n    updated_at: str\n    volunteer_count: int\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.ends_at","title":"<code>ends_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.guest_count","title":"<code>guest_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.note","title":"<code>note: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.regular_count","title":"<code>regular_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.starts_at","title":"<code>starts_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsAttributesModel.volunteer_count","title":"<code>volunteer_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsDataLinkModel","title":"<code>PcoEventPeriodsDataLinkModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodsDataLinkModel(PcoBaseModel):\n    data: PcoBaseDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsDataLinkModel.data","title":"<code>data: PcoBaseDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsLinksModel","title":"<code>PcoEventPeriodsLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodsLinksModel(PcoBaseLinksModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel","title":"<code>PcoEventPeriodsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodsModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoEventPeriodsAttributesModel\n    relationships: PcoEventPeriodsRelationshipsModel\n    links: PcoEventPeriodsLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel.attributes","title":"<code>attributes: PcoEventPeriodsAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel.links","title":"<code>links: PcoEventPeriodsLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel.relationships","title":"<code>relationships: PcoEventPeriodsRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsRelationshipsModel","title":"<code>PcoEventPeriodsRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventPeriodsRelationshipsModel(PcoBaseRelationshipsModel):\n    event: PcoEventDataLinkModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventPeriodsRelationshipsModel.event","title":"<code>event: PcoEventDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel","title":"<code>PcoEventTimesAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesAttributesModel(PcoBaseAttributesModel):\n    created_at: str\n    day_of_week: int\n    guest_count: int\n    hides_at: str\n    hour: int\n    minute: int\n    name: Union[str, None]\n    regular_count: int\n    shows_at: str\n    starts_at: str\n    total_count: int\n    updated_at: str\n    volunteer_count: int\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.day_of_week","title":"<code>day_of_week: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.guest_count","title":"<code>guest_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.hides_at","title":"<code>hides_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.hour","title":"<code>hour: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.minute","title":"<code>minute: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.name","title":"<code>name: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.regular_count","title":"<code>regular_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.shows_at","title":"<code>shows_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.starts_at","title":"<code>starts_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.total_count","title":"<code>total_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesAttributesModel.volunteer_count","title":"<code>volunteer_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountAttrModel","title":"<code>PcoEventTimesHeadcountAttrModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesHeadcountAttrModel(PcoBaseAttributesModel):\n    created_at: str\n    total: int\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountAttrModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountAttrModel.total","title":"<code>total: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountAttrModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountLinksModel","title":"<code>PcoEventTimesHeadcountLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesHeadcountLinksModel(PcoBaseLinksModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel","title":"<code>PcoEventTimesHeadcountModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesHeadcountModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoEventTimesHeadcountAttrModel\n    relationships: PcoEventTimesHeadcountRelModel\n    links: PcoEventTimesHeadcountLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel.attributes","title":"<code>attributes: PcoEventTimesHeadcountAttrModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel.links","title":"<code>links: PcoEventTimesHeadcountLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel.relationships","title":"<code>relationships: PcoEventTimesHeadcountRelModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountRelModel","title":"<code>PcoEventTimesHeadcountRelModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesHeadcountRelModel(PcoBaseRelationshipsModel):\n    event_time: PcoEventDataLinkModel\n    attendance_type: PcoEventAttendanceTypesDataLinkModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountRelModel.attendance_type","title":"<code>attendance_type: PcoEventAttendanceTypesDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesHeadcountRelModel.event_time","title":"<code>event_time: PcoEventDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesLinksModel","title":"<code>PcoEventTimesLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesLinksModel(PcoBaseLinksModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel","title":"<code>PcoEventTimesModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoEventTimesAttributesModel\n    relationships: PcoEventTimesRelationshipsModel\n    links: PcoEventTimesLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel.attributes","title":"<code>attributes: PcoEventTimesAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel.links","title":"<code>links: PcoEventTimesLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel.relationships","title":"<code>relationships: PcoEventTimesRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesRelationshipsModel","title":"<code>PcoEventTimesRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventTimesRelationshipsModel(PcoBaseRelationshipsModel):\n    event: PcoEventDataLinkModel\n    event_period: PcoEventPeriodsDataLinkModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesRelationshipsModel.event","title":"<code>event: PcoEventDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventTimesRelationshipsModel.event_period","title":"<code>event_period: PcoEventPeriodsDataLinkModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel","title":"<code>PcoEventsAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventsAttributesModel(PcoBaseAttributesModel):\n    archived_at: Union[str, None]\n    created_at: str\n    enable_services_integration: bool\n    frequency: str\n    integration_key: Union[str, None]\n    location_times_enabled: bool\n    name: str\n    pre_select_enabled: bool\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.archived_at","title":"<code>archived_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.enable_services_integration","title":"<code>enable_services_integration: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.frequency","title":"<code>frequency: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.integration_key","title":"<code>integration_key: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.location_times_enabled","title":"<code>location_times_enabled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.pre_select_enabled","title":"<code>pre_select_enabled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsAttributesModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel","title":"<code>PcoEventsLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventsLinksModel(PcoBaseLinksModel):\n    self: str\n    html: str\n    attendance_types: str\n    check_ins: str\n    current_event_times: str\n    event_labels: str\n    event_periods: str\n    locations: str\n    person_events: str\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.attendance_types","title":"<code>attendance_types: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.check_ins","title":"<code>check_ins: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.current_event_times","title":"<code>current_event_times: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.event_labels","title":"<code>event_labels: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.event_periods","title":"<code>event_periods: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.html","title":"<code>html: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.locations","title":"<code>locations: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.person_events","title":"<code>person_events: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsModel","title":"<code>PcoEventsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/checkins_models.py</code> <pre><code>class PcoEventsModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoEventsAttributesModel\n    links: PcoEventsLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsModel.attributes","title":"<code>attributes: PcoEventsAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsModel.links","title":"<code>links: PcoEventsLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/checkins_models/#pcoapi.models.checkins_models.PcoEventsModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/","title":"groups_models","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsAttributesModel","title":"<code>PcoGroupTagsAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTagsAttributesModel(PcoBaseAttributesModel):\n    display_publicly: Union[bool, None] = None\n    multiple_options_enabled: Union[bool, None] = None\n    name: str\n    position: int\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsAttributesModel.display_publicly","title":"<code>display_publicly: Union[bool, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsAttributesModel.multiple_options_enabled","title":"<code>multiple_options_enabled: Union[bool, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsAttributesModel.position","title":"<code>position: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsLinksModel","title":"<code>PcoGroupTagsLinksModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTagsLinksModel(PcoBaseModel):\n    tags: Optional[str] = None\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsLinksModel.tags","title":"<code>tags: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel","title":"<code>PcoGroupTagsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTagsModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupTagsAttributesModel\n    links: PcoGroupTagsLinksModel\n    relationships: PcoGroupsTagsRelModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel.attributes","title":"<code>attributes: PcoGroupTagsAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel.links","title":"<code>links: PcoGroupTagsLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel.relationships","title":"<code>relationships: PcoGroupsTagsRelModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTagsModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel","title":"<code>PcoGroupTypesAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTypesAttributesModel(PcoBaseAttributesModel):\n    church_center_map_visible: bool\n    church_center_visible: bool\n    color: str\n    description: Union[str, None]\n    name: str\n    position: int\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.church_center_map_visible","title":"<code>church_center_map_visible: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.church_center_visible","title":"<code>church_center_visible: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.color","title":"<code>color: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.description","title":"<code>description: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesAttributesModel.position","title":"<code>position: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesLinksModel","title":"<code>PcoGroupTypesLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTypesLinksModel(PcoBaseLinksModel):\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesModel","title":"<code>PcoGroupTypesModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupTypesModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupTypesAttributesModel\n    links: PcoGroupTypesLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesModel.attributes","title":"<code>attributes: PcoGroupTypesAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesModel.links","title":"<code>links: PcoGroupTypesLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupTypesModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel","title":"<code>PcoGroupsAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsAttributesModel(PcoBaseAttributesModel):\n    archived_at: Union[str, None]\n    contact_email: Union[str, None]\n    created_at: str\n    description: Union[str, None]\n    events_visibility: str\n    location_type_preference: Union[str, None]\n    name: str\n    memberships_count: int\n    public_church_center_web_url: Union[str, None]\n    schedule: Union[str, None]\n    virtual_location_url: Union[str, None]\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.archived_at","title":"<code>archived_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.contact_email","title":"<code>contact_email: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.description","title":"<code>description: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.events_visibility","title":"<code>events_visibility: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.location_type_preference","title":"<code>location_type_preference: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.memberships_count","title":"<code>memberships_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.public_church_center_web_url","title":"<code>public_church_center_web_url: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.schedule","title":"<code>schedule: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsAttributesModel.virtual_location_url","title":"<code>virtual_location_url: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingAttrModel","title":"<code>PcoGroupsEventAttendanceRecordingAttrModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventAttendanceRecordingAttrModel(PcoBaseAttributesModel):\n    committed_at: Union[str, None]\n    state: str\n    attendance_totals: PcoGroupsEventAttendanceTotalsModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingAttrModel.attendance_totals","title":"<code>attendance_totals: PcoGroupsEventAttendanceTotalsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingAttrModel.committed_at","title":"<code>committed_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingAttrModel.state","title":"<code>state: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingModel","title":"<code>PcoGroupsEventAttendanceRecordingModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventAttendanceRecordingModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupsEventAttendanceRecordingAttrModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingModel.attributes","title":"<code>attributes: PcoGroupsEventAttendanceRecordingAttrModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceRecordingModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceTotalsModel","title":"<code>PcoGroupsEventAttendanceTotalsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventAttendanceTotalsModel(PcoBaseModel):\n    member: int\n    leader: int\n    visitor: int\n    applicant: int\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceTotalsModel.applicant","title":"<code>applicant: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceTotalsModel.leader","title":"<code>leader: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceTotalsModel.member","title":"<code>member: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttendanceTotalsModel.visitor","title":"<code>visitor: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel","title":"<code>PcoGroupsEventAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventAttributesModel(PcoBaseAttributesModel):\n    attendance_requests_enabled: bool\n    automated_reminder_enabled: bool\n    canceled: bool\n    canceled_at: Union[str, None]\n    description: Union[str, None]\n    ends_at: Union[str, None]\n    location_type_preference: Union[str, None]\n    multi_day: bool\n    name: str\n    reminders_sent: bool\n    reminders_sent_at: Union[str, None]\n    repeating: bool\n    starts_at: Union[str, None]\n    virtual_location_url: Union[str, None]\n    visitors_count: Union[int, None]\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.attendance_requests_enabled","title":"<code>attendance_requests_enabled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.automated_reminder_enabled","title":"<code>automated_reminder_enabled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.canceled","title":"<code>canceled: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.canceled_at","title":"<code>canceled_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.description","title":"<code>description: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.ends_at","title":"<code>ends_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.location_type_preference","title":"<code>location_type_preference: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.multi_day","title":"<code>multi_day: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.reminders_sent","title":"<code>reminders_sent: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.reminders_sent_at","title":"<code>reminders_sent_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.repeating","title":"<code>repeating: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.starts_at","title":"<code>starts_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.virtual_location_url","title":"<code>virtual_location_url: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventAttributesModel.visitors_count","title":"<code>visitors_count: Union[int, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel","title":"<code>PcoGroupsEventLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventLinksModel(PcoBaseLinksModel):\n    attendance_recording: Union[str, None] = None\n    attendances: Union[str, None] = None\n    group: Union[str, None] = None\n    location: Union[str, None] = None\n    notes: Union[str, None] = None\n    self: str\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.attendance_recording","title":"<code>attendance_recording: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.attendances","title":"<code>attendances: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.group","title":"<code>group: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.location","title":"<code>location: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.notes","title":"<code>notes: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel","title":"<code>PcoGroupsEventModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupsEventAttributesModel\n    relationships: PcoGroupsEventRelationshipsModel\n    links: PcoGroupsEventLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel.attributes","title":"<code>attributes: PcoGroupsEventAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel.links","title":"<code>links: PcoGroupsEventLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel.relationships","title":"<code>relationships: PcoGroupsEventRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventRelationshipsModel","title":"<code>PcoGroupsEventRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsEventRelationshipsModel(PcoBaseRelationshipsModel):\n    attendance_submitter: PcoBaseModel\n    group: PcoBaseModel\n    location: PcoBaseModel\n    repeating_event: PcoBaseModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventRelationshipsModel.attendance_submitter","title":"<code>attendance_submitter: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventRelationshipsModel.group","title":"<code>group: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventRelationshipsModel.location","title":"<code>location: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsEventRelationshipsModel.repeating_event","title":"<code>repeating_event: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel","title":"<code>PcoGroupsLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsLinksModel(PcoBaseLinksModel):\n    self: str\n    enrollment: Union[str, None] = None\n    events: Union[str, None] = None\n    group_type: Union[str, None] = None\n    location: Union[str, None] = None\n    memberships: Union[str, None] = None\n    people: Union[str, None] = None\n    resources: Union[str, None] = None\n    tags: Union[str, None] = None\n    html: Union[str, None] = None\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.enrollment","title":"<code>enrollment: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.events","title":"<code>events: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.group_type","title":"<code>group_type: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.html","title":"<code>html: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.location","title":"<code>location: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.memberships","title":"<code>memberships: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.people","title":"<code>people: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.resources","title":"<code>resources: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsLinksModel.tags","title":"<code>tags: Union[str, None] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipAttributesModel","title":"<code>PcoGroupsMembershipAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsMembershipAttributesModel(PcoBaseAttributesModel):\n    joined_at: str\n    role: str\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipAttributesModel.joined_at","title":"<code>joined_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipAttributesModel.role","title":"<code>role: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipModel","title":"<code>PcoGroupsMembershipModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsMembershipModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupsMembershipAttributesModel\n    links: PcoBaseLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipModel.attributes","title":"<code>attributes: PcoGroupsMembershipAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipModel.links","title":"<code>links: PcoBaseLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsMembershipModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel","title":"<code>PcoGroupsModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoGroupsAttributesModel\n    relationships: PcoGroupsRelationshipsModel\n    links: PcoGroupsLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel.attributes","title":"<code>attributes: PcoGroupsAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel.links","title":"<code>links: PcoGroupsLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel.relationships","title":"<code>relationships: PcoGroupsRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsRelationshipsModel","title":"<code>PcoGroupsRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsRelationshipsModel(PcoBaseRelationshipsModel):\n    group_type: PcoBaseModel\n    location: PcoBaseModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsRelationshipsModel.group_type","title":"<code>group_type: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsRelationshipsModel.location","title":"<code>location: PcoBaseModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsTagGroupDataModel","title":"<code>PcoGroupsTagGroupDataModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsTagGroupDataModel(PcoBaseModel):\n    data: PcoBaseDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsTagGroupDataModel.data","title":"<code>data: PcoBaseDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsTagsRelModel","title":"<code>PcoGroupsTagsRelModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/groups_models.py</code> <pre><code>class PcoGroupsTagsRelModel(PcoBaseRelationshipsModel):\n    tag_group: PcoGroupsTagGroupDataModel\n</code></pre>"},{"location":"reference/pcoapi/models/groups_models/#pcoapi.models.groups_models.PcoGroupsTagsRelModel.tag_group","title":"<code>tag_group: PcoGroupsTagGroupDataModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/","title":"people_models","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoGenderModel","title":"<code>PcoGenderModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoGenderModel(PcoBaseModel):\n    data: Union[PcoBaseDataModel, None]\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoGenderModel.data","title":"<code>data: Union[PcoBaseDataModel, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel","title":"<code>PcoListAttributesModelModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoListAttributesModelModel(PcoBaseAttributesModel):\n    auto_refresh: bool\n    automations_active: bool\n    automations_count: int\n    batch_completed_at: Union[str, None]\n    created_at: str\n    description: str\n    has_inactive_results: bool\n    include_inactive: bool\n    invalid: bool\n    name: Union[str, None]\n    name_or_description: str\n    paused_automations_count: int\n    recently_viewed: bool\n    refreshed_at: Union[str, None]\n    return_original_if_none: bool\n    returns: str\n    starred: bool\n    status: str\n    subset: str\n    total_people: int\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.auto_refresh","title":"<code>auto_refresh: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.automations_active","title":"<code>automations_active: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.automations_count","title":"<code>automations_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.batch_completed_at","title":"<code>batch_completed_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.description","title":"<code>description: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.has_inactive_results","title":"<code>has_inactive_results: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.include_inactive","title":"<code>include_inactive: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.invalid","title":"<code>invalid: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.name","title":"<code>name: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.name_or_description","title":"<code>name_or_description: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.paused_automations_count","title":"<code>paused_automations_count: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.recently_viewed","title":"<code>recently_viewed: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.refreshed_at","title":"<code>refreshed_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.return_original_if_none","title":"<code>return_original_if_none: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.returns","title":"<code>returns: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.starred","title":"<code>starred: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.status","title":"<code>status: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.subset","title":"<code>subset: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.total_people","title":"<code>total_people: int</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListAttributesModelModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListModel","title":"<code>PcoListModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoListModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoListAttributesModelModel\n    links: PcoBaseLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListModel.attributes","title":"<code>attributes: PcoListAttributesModelModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListModel.links","title":"<code>links: PcoBaseLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoListModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel","title":"<code>PcoPersonAttributesModel</code>","text":"<p>             Bases: <code>PcoBaseAttributesModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonAttributesModel(PcoBaseAttributesModel):\n    accounting_administrator: bool\n    anniversary: Union[str, None]\n    avatar: str\n    birthdate: Union[str, None]\n    can_create_forms: bool\n    can_email_lists: bool\n    child: bool\n    created_at: str\n    demographic_avatar_url: str\n    directory_status: str\n    first_name: str\n    gender: Union[str, None]\n    given_name: Union[str, None]\n    grade: Union[int, None]\n    graduation_year: Union[int, None]\n    inactivated_at: Union[str, None]\n    last_name: str\n    medical_notes: Union[str, None]\n    membership: Union[str, None]\n    middle_name: Union[str, None]\n    name: str\n    nickname: Union[str, None]\n    passed_background_check: bool\n    people_permissions: Union[str, None]\n    remote_id: Union[str, None]\n    school_type: Union[str, None]\n    site_administrator: bool\n    status: str\n    updated_at: str\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.accounting_administrator","title":"<code>accounting_administrator: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.anniversary","title":"<code>anniversary: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.avatar","title":"<code>avatar: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.birthdate","title":"<code>birthdate: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.can_create_forms","title":"<code>can_create_forms: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.can_email_lists","title":"<code>can_email_lists: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.child","title":"<code>child: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.created_at","title":"<code>created_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.demographic_avatar_url","title":"<code>demographic_avatar_url: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.directory_status","title":"<code>directory_status: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.first_name","title":"<code>first_name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.gender","title":"<code>gender: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.given_name","title":"<code>given_name: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.grade","title":"<code>grade: Union[int, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.graduation_year","title":"<code>graduation_year: Union[int, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.inactivated_at","title":"<code>inactivated_at: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.last_name","title":"<code>last_name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.medical_notes","title":"<code>medical_notes: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.membership","title":"<code>membership: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.middle_name","title":"<code>middle_name: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.nickname","title":"<code>nickname: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.passed_background_check","title":"<code>passed_background_check: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.people_permissions","title":"<code>people_permissions: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.remote_id","title":"<code>remote_id: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.school_type","title":"<code>school_type: Union[str, None]</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.site_administrator","title":"<code>site_administrator: bool</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.status","title":"<code>status: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonAttributesModel.updated_at","title":"<code>updated_at: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataAttrModel","title":"<code>PcoPersonFieldDataAttrModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonFieldDataAttrModel(PcoBaseModel):\n    value: str\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataAttrModel.value","title":"<code>value: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataModel","title":"<code>PcoPersonFieldDataModel</code>","text":"<p>             Bases: <code>PcoBaseDataModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonFieldDataModel(PcoBaseDataModel):\n    type: str\n    id: str\n    attributes: PcoPersonFieldDataAttrModel\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataModel.attributes","title":"<code>attributes: PcoPersonFieldDataAttrModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonFieldDataModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonLinksModel","title":"<code>PcoPersonLinksModel</code>","text":"<p>             Bases: <code>PcoBaseLinksModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonLinksModel(PcoBaseLinksModel):\n    self: str\n    html: str\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonLinksModel.html","title":"<code>html: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonLinksModel.self","title":"<code>self: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel","title":"<code>PcoPersonModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonModel(PcoBaseModel):\n    type: str\n    id: str\n    attributes: PcoPersonAttributesModel\n    relationships: PcoPersonRelationshipsModel\n    links: PcoPersonLinksModel\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel.attributes","title":"<code>attributes: PcoPersonAttributesModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel.id","title":"<code>id: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel.links","title":"<code>links: PcoPersonLinksModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel.relationships","title":"<code>relationships: PcoPersonRelationshipsModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonModel.type","title":"<code>type: str</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonRelationshipsModel","title":"<code>PcoPersonRelationshipsModel</code>","text":"<p>             Bases: <code>PcoBaseRelationshipsModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPersonRelationshipsModel(PcoBaseRelationshipsModel):\n    primary_campus: PcoPrimaryCampusModel\n    gender: PcoGenderModel\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonRelationshipsModel.gender","title":"<code>gender: PcoGenderModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPersonRelationshipsModel.primary_campus","title":"<code>primary_campus: PcoPrimaryCampusModel</code>  <code>instance-attribute</code>","text":""},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPrimaryCampusModel","title":"<code>PcoPrimaryCampusModel</code>","text":"<p>             Bases: <code>PcoBaseModel</code></p> Source code in <code>src/pcoapi/models/people_models.py</code> <pre><code>class PcoPrimaryCampusModel(PcoBaseModel):\n    data: Union[PcoBaseDataModel, None]\n</code></pre>"},{"location":"reference/pcoapi/models/people_models/#pcoapi.models.people_models.PcoPrimaryCampusModel.data","title":"<code>data: Union[PcoBaseDataModel, None]</code>  <code>instance-attribute</code>","text":""}]}